"""Update question tables structure

Revision ID: d0aa691581c4
Revises: 361787b386d9
Create Date: 2025-04-09 16:14:17.199236

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'd0aa691581c4'
down_revision = '361787b386d9'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 먼저 외래키 제약조건을 제거합니다
    try:
        op.drop_constraint('user_wrong_answers_ibfk_2', 'user_wrong_answers', type_='foreignkey')
    except Exception as e:
        print(f"외래키 제거 중 오류 발생: {e}")
        
    try:
        op.drop_constraint('algorithm_questions_ibfk_1', 'algorithm_questions', type_='foreignkey')
    except Exception:
        pass
        
    try:
        op.drop_constraint('app_defect_questions_ibfk_1', 'app_defect_questions', type_='foreignkey')
    except Exception:
        pass
        
    try:
        op.drop_constraint('app_test_questions_ibfk_1', 'app_test_questions', type_='foreignkey')
    except Exception:
        pass
        
    try:
        op.drop_constraint('base_sql_questions_ibfk_1', 'base_sql_questions', type_='foreignkey')
    except Exception:
        pass
        
    try:
        op.drop_constraint('db_questions_ibfk_1', 'db_questions', type_='foreignkey')
    except Exception:
        pass
        
    try:
        op.drop_constraint('hard_sql_questions_ibfk_1', 'hard_sql_questions', type_='foreignkey')
    except Exception:
        pass
        
    try:
        op.drop_constraint('network_questions_ibfk_1', 'network_questions', type_='foreignkey')
    except Exception:
        pass
        
    try:
        op.drop_constraint('os_questions_ibfk_1', 'os_questions', type_='foreignkey')
    except Exception:
        pass
        
    try:
        op.drop_constraint('program_questions_ibfk_1', 'program_questions', type_='foreignkey')
    except Exception:
        pass
        
    # 외래키 제약조건 제거 후 questions 테이블 삭제
    try:
        op.drop_table('questions')
    except Exception as e:
        print(f"questions 테이블 삭제 중 오류 발생: {e}")
    
    # 나머지 테이블 수정 작업
    op.add_column('algorithm_questions', sa.Column('question', sa.Text(), nullable=False))
    op.add_column('algorithm_questions', sa.Column('answer', sa.Text(), nullable=False))
    op.add_column('algorithm_questions', sa.Column('example', sa.Text(), nullable=True))
    op.add_column('algorithm_questions', sa.Column('difficulty', sa.Integer(), nullable=True))
    op.add_column('algorithm_questions', sa.Column('keywords', sa.Text(), nullable=True))
    op.add_column('algorithm_questions', sa.Column('created_at', sa.DateTime(), nullable=True))
    
    op.add_column('app_defect_questions', sa.Column('question', sa.Text(), nullable=False))
    op.add_column('app_defect_questions', sa.Column('answer', sa.Text(), nullable=False))
    op.add_column('app_defect_questions', sa.Column('example', sa.Text(), nullable=True))
    op.add_column('app_defect_questions', sa.Column('difficulty', sa.Integer(), nullable=True))
    op.add_column('app_defect_questions', sa.Column('keywords', sa.Text(), nullable=True))
    op.add_column('app_defect_questions', sa.Column('created_at', sa.DateTime(), nullable=True))
    
    op.add_column('app_test_questions', sa.Column('question', sa.Text(), nullable=False))
    op.add_column('app_test_questions', sa.Column('answer', sa.Text(), nullable=False))
    op.add_column('app_test_questions', sa.Column('example', sa.Text(), nullable=True))
    op.add_column('app_test_questions', sa.Column('difficulty', sa.Integer(), nullable=True))
    op.add_column('app_test_questions', sa.Column('keywords', sa.Text(), nullable=True))
    op.add_column('app_test_questions', sa.Column('created_at', sa.DateTime(), nullable=True))
    
    op.add_column('base_sql_questions', sa.Column('question', sa.Text(), nullable=False))
    op.add_column('base_sql_questions', sa.Column('answer', sa.Text(), nullable=False))
    op.add_column('base_sql_questions', sa.Column('example', sa.Text(), nullable=True))
    op.add_column('base_sql_questions', sa.Column('difficulty', sa.Integer(), nullable=True))
    op.add_column('base_sql_questions', sa.Column('keywords', sa.Text(), nullable=True))
    op.add_column('base_sql_questions', sa.Column('created_at', sa.DateTime(), nullable=True))
    
    op.add_column('db_questions', sa.Column('question', sa.Text(), nullable=False))
    op.add_column('db_questions', sa.Column('answer', sa.Text(), nullable=False))
    op.add_column('db_questions', sa.Column('example', sa.Text(), nullable=True))
    op.add_column('db_questions', sa.Column('difficulty', sa.Integer(), nullable=True))
    op.add_column('db_questions', sa.Column('keywords', sa.Text(), nullable=True))
    op.add_column('db_questions', sa.Column('created_at', sa.DateTime(), nullable=True))
    
    op.add_column('hard_sql_questions', sa.Column('question', sa.Text(), nullable=False))
    op.add_column('hard_sql_questions', sa.Column('answer', sa.Text(), nullable=False))
    op.add_column('hard_sql_questions', sa.Column('example', sa.Text(), nullable=True))
    op.add_column('hard_sql_questions', sa.Column('difficulty', sa.Integer(), nullable=True))
    op.add_column('hard_sql_questions', sa.Column('keywords', sa.Text(), nullable=True))
    op.add_column('hard_sql_questions', sa.Column('created_at', sa.DateTime(), nullable=True))
    
    op.add_column('network_questions', sa.Column('question', sa.Text(), nullable=False))
    op.add_column('network_questions', sa.Column('answer', sa.Text(), nullable=False))
    op.add_column('network_questions', sa.Column('example', sa.Text(), nullable=True))
    op.add_column('network_questions', sa.Column('difficulty', sa.Integer(), nullable=True))
    op.add_column('network_questions', sa.Column('keywords', sa.Text(), nullable=True))
    op.add_column('network_questions', sa.Column('created_at', sa.DateTime(), nullable=True))
    
    op.add_column('os_questions', sa.Column('question', sa.Text(), nullable=False))
    op.add_column('os_questions', sa.Column('answer', sa.Text(), nullable=False))
    op.add_column('os_questions', sa.Column('example', sa.Text(), nullable=True))
    op.add_column('os_questions', sa.Column('difficulty', sa.Integer(), nullable=True))
    op.add_column('os_questions', sa.Column('keywords', sa.Text(), nullable=True))
    op.add_column('os_questions', sa.Column('created_at', sa.DateTime(), nullable=True))
    
    op.add_column('program_questions', sa.Column('question', sa.Text(), nullable=False))
    op.add_column('program_questions', sa.Column('answer', sa.Text(), nullable=False))
    op.add_column('program_questions', sa.Column('example', sa.Text(), nullable=True))
    op.add_column('program_questions', sa.Column('difficulty', sa.Integer(), nullable=True))
    op.add_column('program_questions', sa.Column('keywords', sa.Text(), nullable=True))
    op.add_column('program_questions', sa.Column('created_at', sa.DateTime(), nullable=True))
    
    op.add_column('user_wrong_answers', sa.Column('question_type', sa.String(length=50), nullable=True))
    op.add_column('user_wrong_answers', sa.Column('created_at', sa.DateTime(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key('user_wrong_answers_ibfk_2', 'user_wrong_answers', 'questions', ['question_id'], ['id'])
    op.drop_column('user_wrong_answers', 'created_at')
    op.drop_column('user_wrong_answers', 'question_type')
    op.create_foreign_key('program_questions_ibfk_1', 'program_questions', 'questions', ['id'], ['id'], ondelete='CASCADE')
    op.drop_column('program_questions', 'created_at')
    op.drop_column('program_questions', 'keywords')
    op.drop_column('program_questions', 'difficulty')
    op.drop_column('program_questions', 'example')
    op.drop_column('program_questions', 'answer')
    op.drop_column('program_questions', 'question')
    op.create_foreign_key('os_questions_ibfk_1', 'os_questions', 'questions', ['id'], ['id'], ondelete='CASCADE')
    op.drop_column('os_questions', 'created_at')
    op.drop_column('os_questions', 'keywords')
    op.drop_column('os_questions', 'difficulty')
    op.drop_column('os_questions', 'example')
    op.drop_column('os_questions', 'answer')
    op.drop_column('os_questions', 'question')
    op.create_foreign_key('network_questions_ibfk_1', 'network_questions', 'questions', ['id'], ['id'], ondelete='CASCADE')
    op.drop_column('network_questions', 'created_at')
    op.drop_column('network_questions', 'keywords')
    op.drop_column('network_questions', 'difficulty')
    op.drop_column('network_questions', 'example')
    op.drop_column('network_questions', 'answer')
    op.drop_column('network_questions', 'question')
    op.create_foreign_key('hard_sql_questions_ibfk_1', 'hard_sql_questions', 'questions', ['id'], ['id'], ondelete='CASCADE')
    op.drop_column('hard_sql_questions', 'created_at')
    op.drop_column('hard_sql_questions', 'keywords')
    op.drop_column('hard_sql_questions', 'difficulty')
    op.drop_column('hard_sql_questions', 'example')
    op.drop_column('hard_sql_questions', 'answer')
    op.drop_column('hard_sql_questions', 'question')
    op.create_foreign_key('db_questions_ibfk_1', 'db_questions', 'questions', ['id'], ['id'], ondelete='CASCADE')
    op.drop_column('db_questions', 'created_at')
    op.drop_column('db_questions', 'keywords')
    op.drop_column('db_questions', 'difficulty')
    op.drop_column('db_questions', 'example')
    op.drop_column('db_questions', 'answer')
    op.drop_column('db_questions', 'question')
    op.create_foreign_key('base_sql_questions_ibfk_1', 'base_sql_questions', 'questions', ['id'], ['id'], ondelete='CASCADE')
    op.drop_column('base_sql_questions', 'created_at')
    op.drop_column('base_sql_questions', 'keywords')
    op.drop_column('base_sql_questions', 'difficulty')
    op.drop_column('base_sql_questions', 'example')
    op.drop_column('base_sql_questions', 'answer')
    op.drop_column('base_sql_questions', 'question')
    op.create_foreign_key('app_test_questions_ibfk_1', 'app_test_questions', 'questions', ['id'], ['id'], ondelete='CASCADE')
    op.drop_column('app_test_questions', 'created_at')
    op.drop_column('app_test_questions', 'keywords')
    op.drop_column('app_test_questions', 'difficulty')
    op.drop_column('app_test_questions', 'example')
    op.drop_column('app_test_questions', 'answer')
    op.drop_column('app_test_questions', 'question')
    op.create_foreign_key('app_defect_questions_ibfk_1', 'app_defect_questions', 'questions', ['id'], ['id'], ondelete='CASCADE')
    op.drop_column('app_defect_questions', 'created_at')
    op.drop_column('app_defect_questions', 'keywords')
    op.drop_column('app_defect_questions', 'difficulty')
    op.drop_column('app_defect_questions', 'example')
    op.drop_column('app_defect_questions', 'answer')
    op.drop_column('app_defect_questions', 'question')
    op.create_foreign_key('algorithm_questions_ibfk_1', 'algorithm_questions', 'questions', ['id'], ['id'], ondelete='CASCADE')
    op.drop_column('algorithm_questions', 'created_at')
    op.drop_column('algorithm_questions', 'keywords')
    op.drop_column('algorithm_questions', 'difficulty')
    op.drop_column('algorithm_questions', 'example')
    op.drop_column('algorithm_questions', 'answer')
    op.drop_column('algorithm_questions', 'question')
    op.create_table('questions',
    sa.Column('id', mysql.VARCHAR(length=36), nullable=False),
    sa.Column('category', mysql.VARCHAR(length=50), nullable=True),
    sa.Column('question_text', mysql.TEXT(), nullable=False),
    sa.Column('answer', mysql.TEXT(), nullable=False),
    sa.Column('difficulty', mysql.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('keywords', mysql.TEXT(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    mysql_collate='utf8mb4_0900_ai_ci',
    mysql_default_charset='utf8mb4',
    mysql_engine='InnoDB'
    )
    # ### end Alembic commands ### 