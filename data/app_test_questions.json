[
  {
    "id": "apptest-1",
    "question": "사용자의 요구사항이 제대로 구현되었는지를 확인하기 위해, 개발이 완료된 시스템을 고객 또는 사용자가 직접 테스트하는 방식은 무엇인가?",
    "answer": "인수 테스트",
    "example": "",
    "difficulty": 1
  },
  {
    "id": "apptest-2",
    "question": "다음 중 단위 테스트(Unit Test)의 특징으로 올바른 설명을 고르시오.",
    "answer": "3",
    "example": "1. 전체 시스템 통합 후 수행\n2. 사용자 환경에서 수행\n3. 프로그램의 개별 모듈 단위로 수행\n4. 외부 인터페이스 중심으로 수행",
    "difficulty": 1
  },
  {
    "id": "apptest-3",
    "question": "시스템이 다양한 하드웨어나 운영체제에서 동일하게 동작하는지 확인하기 위한 테스트 유형은 무엇인가?",
    "answer": "호환성 테스트",
    "example": "",
    "difficulty": 2
  },
  {
    "id": "apptest-4",
    "question": "다음 중 블랙박스 테스트 기법에 해당하는 항목을 모두 고르시오.",
    "answer": "1, 3",
    "example": "1. 경계값 분석\n2. 루프 테스트\n3. 동등 분할\n4. 제어 흐름 분석",
    "difficulty": 2
  },
  {
    "id": "apptest-5",
    "question": "시스템이 정상 동작 중 예외 상황이 발생했을 때, 문제를 감지하고 적절히 복구하는지 확인하기 위한 테스트는 무엇인가?",
    "answer": "회복 테스트",
    "example": "",
    "difficulty": 2
  },
  {
    "id": "apptest-6",
    "question": "다음 중 테스트 자동화 도구의 사용 목적에 가장 적절한 것은?",
    "answer": "2",
    "example": "1. 코드 실행 속도 향상\n2. 테스트 반복 수행 자동화\n3. 사용자 인터페이스 개발\n4. 프로그램 용량 줄이기",
    "difficulty": 1
  },
  {
    "id": "apptest-7",
    "question": "시스템의 응답 시간, 처리 속도, 처리량 등을 측정하여 성능을 확인하는 테스트는 무엇인가?",
    "answer": "성능 테스트",
    "example": "",
    "difficulty": 2
  },
  {
    "id": "apptest-8",
    "question": "테스트 수행 후 발견된 결함을 수정한 뒤, 기존 기능이 정상 작동하는지 확인하는 테스트는 무엇인가?",
    "answer": "회귀 테스트",
    "example": "",
    "difficulty": 2
  },
  {
    "id": "apptest-9",
    "question": "다음 중 화이트박스 테스트에 해당하는 항목은?",
    "answer": "1, 2, 4",
    "example": "1. 제어 흐름 테스트\n2. 조건 분기 테스트\n3. 경계값 분석\n4. 루프 테스트",
    "difficulty": 3
  },
  {
    "id": "apptest-10",
    "question": "사용자가 실제 사용하는 환경에서, 사용자의 업무 흐름을 기반으로 테스트를 수행하는 방식은 무엇인가?",
    "answer": "시나리오 테스트",
    "example": "",
    "difficulty": 2
  },
  {
    "id": "apptest-11",
    "question": "단위 테스트를 수행하는 주요 목적은 무엇인가?",
    "answer": "모듈별 기능 검증",
    "example": "",
    "difficulty": 1
  },
  {
    "id": "apptest-12",
    "question": "다음 중 시스템 테스트(System Test)의 정의로 적절한 것을 고르시오.",
    "answer": "3",
    "example": "1. 설계 문서를 검토하는 테스트\n2. 개발자가 직접 수행하는 테스트\n3. 전체 시스템을 통합하여 수행하는 테스트\n4. 고객이 최종 확인하는 테스트",
    "difficulty": 2
  },
  {
    "id": "apptest-13",
    "question": "서로 다른 모듈이나 시스템 간의 연동 기능이 정상 작동하는지를 검증하는 테스트는 무엇인가?",
    "answer": "통합 테스트",
    "example": "",
    "difficulty": 1
  },
  {
    "id": "apptest-14",
    "question": "다음 중 사용자 시나리오 기반의 테스트 목적에 해당하지 않는 것은?",
    "answer": "3",
    "example": "1. 기능 통합 확인\n2. 실 사용 흐름 확인\n3. 소스코드 구조 분석\n4. 실제 사용 환경 반영",
    "difficulty": 2
  },
  {
    "id": "apptest-15",
    "question": "테스트 시 결함을 유발하는 입력을 의도적으로 주입해 시스템의 예외 처리를 검증하는 테스트는 무엇인가?",
    "answer": "오류 유도 테스트",
    "example": "",
    "difficulty": 3
  },
  {
    "id": "apptest-16",
    "question": "다음 중 테스트 케이스의 설계 기법이 아닌 것은?",
    "answer": "4",
    "example": "1. 경계값 분석\n2. 상태 전이\n3. 분류 트리\n4. 코드 압축",
    "difficulty": 2
  },
  {
    "id": "apptest-17",
    "question": "다수의 사용자 요청에 따라 시스템의 동시 처리 성능을 검증하는 테스트는 무엇인가?",
    "answer": "병행성 테스트",
    "example": "",
    "difficulty": 3
  },
  {
    "id": "apptest-18",
    "question": "일정 시간 동안 시스템이 오류 없이 지속적으로 동작하는지를 확인하는 테스트는 무엇인가?",
    "answer": "안정성 테스트",
    "example": "",
    "difficulty": 2
  },
  {
    "id": "apptest-19",
    "question": "소프트웨어 개발 생명주기(SDLC) 단계 중 테스트 계획, 케이스 설계, 수행, 결함 리포트 등을 수행하는 단계는 무엇인가?",
    "answer": "테스트 단계",
    "example": "",
    "difficulty": 1
  },
  {
    "id": "apptest-20",
    "question": "다음 중 블랙박스 테스트의 주요 특징으로 가장 적절한 설명은 무엇인가?",
    "answer": "2",
    "example": "1. 코드 구조를 기반으로 테스트\n2. 내부 로직보다 입력과 출력 중심\n3. 함수 내부 루프를 분석\n4. 클래스 계층 구조를 확인",
    "difficulty": 2
  }
]
